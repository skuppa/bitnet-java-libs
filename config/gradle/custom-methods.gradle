buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.yaml:snakeyaml:1.15'
    }
}

String addAdditionalMethod(String source, def checkConfig) {
    def methods = checkConfig.methods.readLines().collect { line -> "    ${line}" }.join("\n")
    def imports = checkConfig.imports

    source = source.replaceAll(/(?m)(import.*(?!.*\nimport))/, "\$1\n" + imports)
    source = source.replaceAll(/(?m)\}\n?(?![\f\n\r])\u0024/, "\n" + methods + "\n}\n")

    return source
}

task addAdditionalMethods() {
    doLast {
        File configFile = new File("$project.projectDir/../config/additional_methods.yaml")
        def validationConfig = new org.yaml.snakeyaml.Yaml().load(configFile.newReader());

        validationConfig.each { clazz, config ->
            def sourceFile = file("${project.projectDir}/src/main/java/" + clazz.replaceAll(/\./, "/") + ".java")
            def source = sourceFile.text
            source = addAdditionalMethod(source, config)
            sourceFile.text = source
        }
    }
}

compileJava.dependsOn addAdditionalMethods
addAdditionalMethods.shouldRunAfter generateJsonSchema2Pojo