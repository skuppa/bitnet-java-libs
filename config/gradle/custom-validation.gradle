buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.yaml:snakeyaml:1.15'
    }
}

String updateWithCustomValidation(String source, def checkConfig) {
    checkConfig.check.each { check ->
        source = source.replaceAll("(import org.apache.commons.lang3.builder.EqualsBuilder;)", "import ${check.class};\n\$1")

        String annotation = check.class.substring(check.class.lastIndexOf('.') + 1)

        check.fields.each {
            String replace = "(private String ${it};)";
            source = source.replaceAll(replace, "@${annotation}\n    \$1")
        }

    }

    return source
}

task addCustomValidationAnnotations() {
    doLast {
        File configFile = new File("$project.projectDir/../config/validation.yaml")
        def validationConfig = new org.yaml.snakeyaml.Yaml().load(configFile.newReader());

        validationConfig.each { clazz, checkConfig ->
            def sourceFile = file("${project.projectDir}/src/main/java/" + clazz.replaceAll(/\./, "/") + ".java")
            def source = sourceFile.text
            source = updateWithCustomValidation(source, checkConfig)
            sourceFile.text = source
        }
    }
}

compileJava.dependsOn addCustomValidationAnnotations
addCustomValidationAnnotations.shouldRunAfter generateJsonSchema2Pojo